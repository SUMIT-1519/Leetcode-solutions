//leetcode 1512. Number of Good Pairs
class Solution {
    public int numIdenticalPairs(int[] nums) {
        int goodPairs=0;
        for(int i =0; i< nums.length ;i++){
          for(int j = i +1 ; j< nums.length ; j++){
            if(nums[i]==nums[j]){
                goodPairs++;
            }
          }
        }
        return goodPairs;
    }
}


approach 2 :using hashmap 

class Solution {
    public int numIdenticalPairs(int[] nums) {
        HashMap<Integer , Integer > map = new HashMap<>();
        int pairs = 0;
        for(int i =0; i < nums.length; i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        for(int keys : map.keySet()){
            int n = map.get(keys);
            if(n>1){
                pairs += n*(n-1)/2 ;
            }
        }
       return pairs ;
    }
}


//leetcode 992. Subarrays with K Different Integers

class Solution {
    public int subarraysWithKDistinct(int[] nums, int k) {
       return subarraysWithatMostK( nums, k)- subarraysWithatMostK(nums,k-1);
    }
       private int subarraysWithatMostK(int[] nums, int k) {
        int left=0;
        int right=0;
        int ans =0;
        Map<Integer,Integer> map = new HashMap<>();
        while (right<nums.length){
            map.put(nums[right],map.getOrDefault(nums[right],0)+1);
            while(map.size() > k){
                map.put(nums[left],map.get(nums[left])-1);
                if(map.get(nums[left])==0){
                    map.remove(nums[left]);
                }
                left++;
                
            }
            ans+=right-left+1;
            right++;
        }
        return ans;
        }
    }

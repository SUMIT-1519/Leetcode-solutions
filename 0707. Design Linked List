//leetcode : 0707. Design Linked List


class MyLinkedList {
     private class Node{
        int val;
         Node  next;
         Node(int val){
           this.val = val ;
         }
     }

    private Node head ;
    private int size ;

    public MyLinkedList() {
       head = null;
       size = 0;
    }
    
    public int get(int index) {
        if (index < 0 || index >= size) return -1;
        Node temp = head;
        int i = 0;
       while(temp!=null){
          if(index==i){
            return temp.val;
          }
          i++;
          temp = temp.next;
       }
       return -1;
    }
    
    public void addAtHead(int val) {
        Node newNode = new Node(val) ;
        // if(head==null){
        //     head=newNode;
        // }
        newNode.next=head;
        head = newNode;
        size++;
    }
    
    public void addAtTail(int val) {
        Node newNode = new Node(val) ;
        if(head==null){
            head=newNode;
        }else{
            Node temp = head;
            while(temp.next!=null){
                temp=temp.next;
            }

        temp.next=newNode;
        }
        size++;
    }
    
    public void addAtIndex(int index, int val) {
         if (index < 0 || index > size) return;
         if (index == 0) {
            addAtHead(val);
            return;
        }
        Node newNode = new Node(val) ;
        Node temp = head;
        int i = 0;
        while(temp!=null){
            if( i== index-1){
                newNode.next=temp.next;
                temp.next = newNode ;
                size++;
                return;
                
            }
            temp=temp.next;
            i++;
        }
        
    }
    
    public void deleteAtIndex(int index) {
         if (index < 0 || index >= size) return;
         if (index == 0) {
            head = head.next;
            size--;
            return;
        }
        Node temp = head;
        int i = 0;
        while(temp!= null){
            if(i==index-1){
                temp.next=temp.next.next;
                size--;
                
            }
            temp=temp.next;
            i++;
        }
         
    }
}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */
